-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_features : IN STD_LOGIC_VECTOR (255 downto 0);
    input_features_ap_vld : IN STD_LOGIC;
    layer9_out_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer9_out_0_ap_vld : OUT STD_LOGIC;
    layer9_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer9_out_1_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.281000,HLS_SYN_LAT=17,HLS_SYN_TPT=4,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=9429,HLS_SYN_LUT=42704,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal input_features_preg : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal input_features_in_sig : STD_LOGIC_VECTOR (255 downto 0);
    signal input_features_ap_vld_preg : STD_LOGIC := '0';
    signal input_features_ap_vld_in_sig : STD_LOGIC;
    signal input_features_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer2_out_reg_744 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal layer2_out_1_reg_749 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_2_reg_754 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_3_reg_759 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_4_reg_764 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_5_reg_769 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_6_reg_774 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_7_reg_779 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_8_reg_784 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_9_reg_789 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_10_reg_794 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_11_reg_799 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_12_reg_804 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_13_reg_809 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_14_reg_814 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_15_reg_819 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_16_reg_824 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_17_reg_829 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_18_reg_834 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_19_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_20_reg_844 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_21_reg_849 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_22_reg_854 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_23_reg_859 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_24_reg_864 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_25_reg_869 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_26_reg_874 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_27_reg_879 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_28_reg_884 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_29_reg_889 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_30_reg_894 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_31_reg_899 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal layer4_out_reg_1014 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_1_reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_2_reg_1024 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_3_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_4_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_5_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_6_reg_1044 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_7_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_8_reg_1054 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_9_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_10_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_11_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_12_reg_1074 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_13_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_14_reg_1084 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_15_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_reg_1149 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_1_reg_1154 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_2_reg_1159 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_3_reg_1164 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_4_reg_1169 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_5_reg_1174 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_6_reg_1179 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_7_reg_1184 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp20 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp21 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp22 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_ready : STD_LOGIC;
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call75 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp89 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp90 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp91 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp92 : BOOLEAN;
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_ready : STD_LOGIC;
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call109 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp126 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp127 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp128 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp129 : BOOLEAN;
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_ready : STD_LOGIC;
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call127 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp147 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp148 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp149 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp150 : BOOLEAN;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_done : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_idle : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ready : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ce : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_11001_ignoreCallOp153 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call130 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp154 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp163 : BOOLEAN;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg : STD_LOGIC := '0';
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_onepulse_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg : STD_LOGIC := '0';
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_val : IN STD_LOGIC_VECTOR (255 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68 : component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ready,
        data_val => input_features_in_sig,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_7,
        ap_return_8 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_8,
        ap_return_9 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_9,
        ap_return_10 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_10,
        ap_return_11 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_11,
        ap_return_12 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_12,
        ap_return_13 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_13,
        ap_return_14 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_14,
        ap_return_15 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_15,
        ap_return_16 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_16,
        ap_return_17 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_17,
        ap_return_18 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_18,
        ap_return_19 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_19,
        ap_return_20 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_20,
        ap_return_21 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_21,
        ap_return_22 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_22,
        ap_return_23 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_23,
        ap_return_24 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_24,
        ap_return_25 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_25,
        ap_return_26 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_26,
        ap_return_27 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_27,
        ap_return_28 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_28,
        ap_return_29 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_29,
        ap_return_30 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_30,
        ap_return_31 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_31,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ce);

    call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74 : component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s
    port map (
        ap_ready => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_ready,
        data_0_val => layer2_out_reg_744,
        data_1_val => layer2_out_1_reg_749,
        data_2_val => layer2_out_2_reg_754,
        data_3_val => layer2_out_3_reg_759,
        data_4_val => layer2_out_4_reg_764,
        data_5_val => layer2_out_5_reg_769,
        data_6_val => layer2_out_6_reg_774,
        data_7_val => layer2_out_7_reg_779,
        data_8_val => layer2_out_8_reg_784,
        data_9_val => layer2_out_9_reg_789,
        data_10_val => layer2_out_10_reg_794,
        data_11_val => layer2_out_11_reg_799,
        data_12_val => layer2_out_12_reg_804,
        data_13_val => layer2_out_13_reg_809,
        data_14_val => layer2_out_14_reg_814,
        data_15_val => layer2_out_15_reg_819,
        data_16_val => layer2_out_16_reg_824,
        data_17_val => layer2_out_17_reg_829,
        data_18_val => layer2_out_18_reg_834,
        data_19_val => layer2_out_19_reg_839,
        data_20_val => layer2_out_20_reg_844,
        data_21_val => layer2_out_21_reg_849,
        data_22_val => layer2_out_22_reg_854,
        data_23_val => layer2_out_23_reg_859,
        data_24_val => layer2_out_24_reg_864,
        data_25_val => layer2_out_25_reg_869,
        data_26_val => layer2_out_26_reg_874,
        data_27_val => layer2_out_27_reg_879,
        data_28_val => layer2_out_28_reg_884,
        data_29_val => layer2_out_29_reg_889,
        data_30_val => layer2_out_30_reg_894,
        data_31_val => layer2_out_31_reg_899,
        ap_return_0 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_0,
        ap_return_1 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_1,
        ap_return_2 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_2,
        ap_return_3 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_3,
        ap_return_4 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_4,
        ap_return_5 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_5,
        ap_return_6 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_6,
        ap_return_7 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_7,
        ap_return_8 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_8,
        ap_return_9 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_9,
        ap_return_10 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_10,
        ap_return_11 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_11,
        ap_return_12 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_12,
        ap_return_13 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_13,
        ap_return_14 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_14,
        ap_return_15 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_15,
        ap_return_16 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_16,
        ap_return_17 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_17,
        ap_return_18 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_18,
        ap_return_19 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_19,
        ap_return_20 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_20,
        ap_return_21 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_21,
        ap_return_22 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_22,
        ap_return_23 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_23,
        ap_return_24 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_24,
        ap_return_25 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_25,
        ap_return_26 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_26,
        ap_return_27 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_27,
        ap_return_28 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_28,
        ap_return_29 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_29,
        ap_return_30 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_30,
        ap_return_31 => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_31);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110 : component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ready,
        data_0_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_0,
        data_1_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_1,
        data_2_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_2,
        data_3_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_3,
        data_4_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_4,
        data_5_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_5,
        data_6_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_6,
        data_7_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_7,
        data_8_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_8,
        data_9_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_9,
        data_10_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_10,
        data_11_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_11,
        data_12_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_12,
        data_13_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_13,
        data_14_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_14,
        data_15_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_15,
        data_16_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_16,
        data_17_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_17,
        data_18_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_18,
        data_19_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_19,
        data_20_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_20,
        data_21_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_21,
        data_22_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_22,
        data_23_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_23,
        data_24_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_24,
        data_25_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_25,
        data_26_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_26,
        data_27_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_27,
        data_28_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_28,
        data_29_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_29,
        data_30_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_30,
        data_31_val => call_ret2_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_74_ap_return_31,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_7,
        ap_return_8 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_8,
        ap_return_9 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_9,
        ap_return_10 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_10,
        ap_return_11 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_11,
        ap_return_12 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_12,
        ap_return_13 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_13,
        ap_return_14 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_14,
        ap_return_15 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_15,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ce);

    call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146 : component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s
    port map (
        ap_ready => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_ready,
        data_0_val => layer4_out_reg_1014,
        data_1_val => layer4_out_1_reg_1019,
        data_2_val => layer4_out_2_reg_1024,
        data_3_val => layer4_out_3_reg_1029,
        data_4_val => layer4_out_4_reg_1034,
        data_5_val => layer4_out_5_reg_1039,
        data_6_val => layer4_out_6_reg_1044,
        data_7_val => layer4_out_7_reg_1049,
        data_8_val => layer4_out_8_reg_1054,
        data_9_val => layer4_out_9_reg_1059,
        data_10_val => layer4_out_10_reg_1064,
        data_11_val => layer4_out_11_reg_1069,
        data_12_val => layer4_out_12_reg_1074,
        data_13_val => layer4_out_13_reg_1079,
        data_14_val => layer4_out_14_reg_1084,
        data_15_val => layer4_out_15_reg_1089,
        ap_return_0 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_0,
        ap_return_1 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_1,
        ap_return_2 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_2,
        ap_return_3 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_3,
        ap_return_4 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_4,
        ap_return_5 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_5,
        ap_return_6 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_6,
        ap_return_7 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_7,
        ap_return_8 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_8,
        ap_return_9 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_9,
        ap_return_10 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_10,
        ap_return_11 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_11,
        ap_return_12 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_12,
        ap_return_13 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_13,
        ap_return_14 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_14,
        ap_return_15 => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_15);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166 : component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ready,
        data_0_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_0,
        data_1_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_1,
        data_2_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_2,
        data_3_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_3,
        data_4_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_4,
        data_5_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_5,
        data_6_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_6,
        data_7_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_7,
        data_8_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_8,
        data_9_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_9,
        data_10_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_10,
        data_11_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_11,
        data_12_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_12,
        data_13_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_13,
        data_14_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_14,
        data_15_val => call_ret4_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_146_ap_return_15,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_7,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ce);

    call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186 : component myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s
    port map (
        ap_ready => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_ready,
        data_0_val => layer6_out_reg_1149,
        data_1_val => layer6_out_1_reg_1154,
        data_2_val => layer6_out_2_reg_1159,
        data_3_val => layer6_out_3_reg_1164,
        data_4_val => layer6_out_4_reg_1169,
        data_5_val => layer6_out_5_reg_1174,
        data_6_val => layer6_out_6_reg_1179,
        data_7_val => layer6_out_7_reg_1184,
        ap_return_0 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_0,
        ap_return_1 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_1,
        ap_return_2 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_2,
        ap_return_3 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_3,
        ap_return_4 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_4,
        ap_return_5 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_5,
        ap_return_6 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_6,
        ap_return_7 => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_7);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198 : component myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start,
        ap_done => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ready,
        data_0_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_0,
        data_1_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_1,
        data_2_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_2,
        data_3_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_3,
        data_4_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_4,
        data_5_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_5,
        data_6_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_6,
        data_7_val => call_ret6_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config7_s_fu_186_ap_return_7,
        ap_return_0 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_1,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ce);

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210 : component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start,
        ap_done => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_done,
        ap_idle => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_idle,
        ap_ready => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ready,
        ap_ce => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ce,
        data_0_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_0,
        data_1_val => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_return_1,
        ap_return_0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_0,
        ap_return_1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    input_features_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_features_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    input_features_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_features_ap_vld = ap_const_logic_1))) then 
                    input_features_ap_vld_preg <= input_features_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    input_features_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_features_preg <= ap_const_lv256_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_features_ap_vld = ap_const_logic_1))) then 
                    input_features_preg <= input_features;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                layer2_out_10_reg_794 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_10;
                layer2_out_11_reg_799 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_11;
                layer2_out_12_reg_804 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_12;
                layer2_out_13_reg_809 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_13;
                layer2_out_14_reg_814 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_14;
                layer2_out_15_reg_819 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_15;
                layer2_out_16_reg_824 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_16;
                layer2_out_17_reg_829 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_17;
                layer2_out_18_reg_834 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_18;
                layer2_out_19_reg_839 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_19;
                layer2_out_1_reg_749 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_1;
                layer2_out_20_reg_844 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_20;
                layer2_out_21_reg_849 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_21;
                layer2_out_22_reg_854 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_22;
                layer2_out_23_reg_859 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_23;
                layer2_out_24_reg_864 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_24;
                layer2_out_25_reg_869 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_25;
                layer2_out_26_reg_874 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_26;
                layer2_out_27_reg_879 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_27;
                layer2_out_28_reg_884 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_28;
                layer2_out_29_reg_889 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_29;
                layer2_out_2_reg_754 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_2;
                layer2_out_30_reg_894 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_30;
                layer2_out_31_reg_899 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_31;
                layer2_out_3_reg_759 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_3;
                layer2_out_4_reg_764 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_4;
                layer2_out_5_reg_769 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_5;
                layer2_out_6_reg_774 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_6;
                layer2_out_7_reg_779 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_7;
                layer2_out_8_reg_784 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_8;
                layer2_out_9_reg_789 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_9;
                layer2_out_reg_744 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_return_0;
                layer4_out_10_reg_1064 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_10;
                layer4_out_11_reg_1069 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_11;
                layer4_out_12_reg_1074 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_12;
                layer4_out_13_reg_1079 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_13;
                layer4_out_14_reg_1084 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_14;
                layer4_out_15_reg_1089 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_15;
                layer4_out_1_reg_1019 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_1;
                layer4_out_2_reg_1024 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_2;
                layer4_out_3_reg_1029 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_3;
                layer4_out_4_reg_1034 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_4;
                layer4_out_5_reg_1039 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_5;
                layer4_out_6_reg_1044 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_6;
                layer4_out_7_reg_1049 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_7;
                layer4_out_8_reg_1054 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_8;
                layer4_out_9_reg_1059 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_9;
                layer4_out_reg_1014 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_return_0;
                layer6_out_1_reg_1154 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_1;
                layer6_out_2_reg_1159 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_2;
                layer6_out_3_reg_1164 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_3;
                layer6_out_4_reg_1169 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_4;
                layer6_out_5_reg_1174 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_5;
                layer6_out_6_reg_1179 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_6;
                layer6_out_7_reg_1184 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_7;
                layer6_out_reg_1149 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_return_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp126_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call109)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp126 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call109));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp147_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call127)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp147 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call127));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp154_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call130)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp154 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call130));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp20_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call9)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp20 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call9));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp89_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call75)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp89 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call75));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp127 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp129 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp150 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp153 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp92 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call109_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call109 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call127_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call127 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call130_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call130 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call75_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call75 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call9_assign_proc : process(input_features_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call9 <= (input_features_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_ignoreCallOp20, ap_block_pp0_stage1_11001_ignoreCallOp21, ap_block_pp0_stage2_11001_ignoreCallOp22, ap_block_pp0_stage3_11001_ignoreCallOp23, ap_CS_fsm_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start <= (grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_onepulse_ap_start or grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_ap_start_reg);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_onepulse_ap_start_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_onepulse_ap_start <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_68_onepulse_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001_ignoreCallOp89, ap_block_pp0_stage1_11001_ignoreCallOp90, ap_block_pp0_stage2_11001_ignoreCallOp91, ap_block_pp0_stage3_11001_ignoreCallOp92)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp92) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp91) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp90) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp89) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_110_ap_start_reg;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001_ignoreCallOp126, ap_block_pp0_stage1_11001_ignoreCallOp127, ap_block_pp0_stage2_11001_ignoreCallOp128, ap_block_pp0_stage3_11001_ignoreCallOp129)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp129) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp128) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp127) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp126) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_fu_166_ap_start_reg;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001_ignoreCallOp147, ap_block_pp0_stage1_11001_ignoreCallOp148, ap_block_pp0_stage2_11001_ignoreCallOp149, ap_block_pp0_stage3_11001_ignoreCallOp150)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp150) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp149) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp148) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp147) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s_fu_198_ap_start_reg;

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage3_11001_ignoreCallOp153, ap_block_pp0_stage0_11001_ignoreCallOp154, ap_block_pp0_stage1_11001_ignoreCallOp163)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp163) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp154) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp153) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ce <= ap_const_logic_1;
        else 
            grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_start_reg;

    input_features_ap_vld_in_sig_assign_proc : process(input_features_ap_vld, input_features_ap_vld_preg)
    begin
        if ((input_features_ap_vld = ap_const_logic_1)) then 
            input_features_ap_vld_in_sig <= input_features_ap_vld;
        else 
            input_features_ap_vld_in_sig <= input_features_ap_vld_preg;
        end if; 
    end process;


    input_features_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, input_features_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_features_blk_n <= input_features_ap_vld;
        else 
            input_features_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_features_in_sig_assign_proc : process(input_features, input_features_preg, input_features_ap_vld)
    begin
        if ((input_features_ap_vld = ap_const_logic_1)) then 
            input_features_in_sig <= input_features;
        else 
            input_features_in_sig <= input_features_preg;
        end if; 
    end process;

    layer9_out_0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_0;

    layer9_out_0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            layer9_out_0_ap_vld <= ap_const_logic_1;
        else 
            layer9_out_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer9_out_1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config9_s_fu_210_ap_return_1;

    layer9_out_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            layer9_out_1_ap_vld <= ap_const_logic_1;
        else 
            layer9_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
