// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s (
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        data_10_val,
        data_11_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11
);


output   ap_ready;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
input  [15:0] data_10_val;
input  [15:0] data_11_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;

wire   [0:0] icmp_ln45_fu_160_p2;
wire   [14:0] trunc_ln42_11_fu_156_p1;
wire   [14:0] datareg_fu_166_p3;
wire   [0:0] icmp_ln45_1_fu_178_p2;
wire   [14:0] trunc_ln42_10_fu_152_p1;
wire   [14:0] datareg_1_fu_184_p3;
wire   [0:0] icmp_ln45_2_fu_196_p2;
wire   [14:0] trunc_ln42_9_fu_148_p1;
wire   [14:0] datareg_2_fu_202_p3;
wire   [0:0] icmp_ln45_3_fu_214_p2;
wire   [14:0] trunc_ln42_8_fu_144_p1;
wire   [14:0] datareg_3_fu_220_p3;
wire   [0:0] icmp_ln45_4_fu_232_p2;
wire   [14:0] trunc_ln42_7_fu_140_p1;
wire   [14:0] datareg_4_fu_238_p3;
wire   [0:0] icmp_ln45_5_fu_250_p2;
wire   [14:0] trunc_ln42_6_fu_136_p1;
wire   [14:0] datareg_5_fu_256_p3;
wire   [0:0] icmp_ln45_6_fu_268_p2;
wire   [14:0] trunc_ln42_5_fu_132_p1;
wire   [14:0] datareg_6_fu_274_p3;
wire   [0:0] icmp_ln45_7_fu_286_p2;
wire   [14:0] trunc_ln42_4_fu_128_p1;
wire   [14:0] datareg_7_fu_292_p3;
wire   [0:0] icmp_ln45_8_fu_304_p2;
wire   [14:0] trunc_ln42_3_fu_124_p1;
wire   [14:0] datareg_8_fu_310_p3;
wire   [0:0] icmp_ln45_9_fu_322_p2;
wire   [14:0] trunc_ln42_2_fu_120_p1;
wire   [14:0] datareg_9_fu_328_p3;
wire   [0:0] icmp_ln45_10_fu_340_p2;
wire   [14:0] trunc_ln42_1_fu_116_p1;
wire   [14:0] datareg_10_fu_346_p3;
wire   [0:0] icmp_ln45_11_fu_358_p2;
wire   [14:0] trunc_ln42_fu_112_p1;
wire   [14:0] datareg_11_fu_364_p3;
wire   [15:0] zext_ln45_fu_174_p1;
wire   [15:0] zext_ln45_1_fu_192_p1;
wire   [15:0] zext_ln45_2_fu_210_p1;
wire   [15:0] zext_ln45_3_fu_228_p1;
wire   [15:0] zext_ln45_4_fu_246_p1;
wire   [15:0] zext_ln45_5_fu_264_p1;
wire   [15:0] zext_ln45_6_fu_282_p1;
wire   [15:0] zext_ln45_7_fu_300_p1;
wire   [15:0] zext_ln45_8_fu_318_p1;
wire   [15:0] zext_ln45_9_fu_336_p1;
wire   [15:0] zext_ln45_10_fu_354_p1;
wire   [15:0] zext_ln45_11_fu_372_p1;

assign ap_ready = 1'b1;

assign datareg_10_fu_346_p3 = ((icmp_ln45_10_fu_340_p2[0:0] == 1'b1) ? trunc_ln42_1_fu_116_p1 : 15'd0);

assign datareg_11_fu_364_p3 = ((icmp_ln45_11_fu_358_p2[0:0] == 1'b1) ? trunc_ln42_fu_112_p1 : 15'd0);

assign datareg_1_fu_184_p3 = ((icmp_ln45_1_fu_178_p2[0:0] == 1'b1) ? trunc_ln42_10_fu_152_p1 : 15'd0);

assign datareg_2_fu_202_p3 = ((icmp_ln45_2_fu_196_p2[0:0] == 1'b1) ? trunc_ln42_9_fu_148_p1 : 15'd0);

assign datareg_3_fu_220_p3 = ((icmp_ln45_3_fu_214_p2[0:0] == 1'b1) ? trunc_ln42_8_fu_144_p1 : 15'd0);

assign datareg_4_fu_238_p3 = ((icmp_ln45_4_fu_232_p2[0:0] == 1'b1) ? trunc_ln42_7_fu_140_p1 : 15'd0);

assign datareg_5_fu_256_p3 = ((icmp_ln45_5_fu_250_p2[0:0] == 1'b1) ? trunc_ln42_6_fu_136_p1 : 15'd0);

assign datareg_6_fu_274_p3 = ((icmp_ln45_6_fu_268_p2[0:0] == 1'b1) ? trunc_ln42_5_fu_132_p1 : 15'd0);

assign datareg_7_fu_292_p3 = ((icmp_ln45_7_fu_286_p2[0:0] == 1'b1) ? trunc_ln42_4_fu_128_p1 : 15'd0);

assign datareg_8_fu_310_p3 = ((icmp_ln45_8_fu_304_p2[0:0] == 1'b1) ? trunc_ln42_3_fu_124_p1 : 15'd0);

assign datareg_9_fu_328_p3 = ((icmp_ln45_9_fu_322_p2[0:0] == 1'b1) ? trunc_ln42_2_fu_120_p1 : 15'd0);

assign datareg_fu_166_p3 = ((icmp_ln45_fu_160_p2[0:0] == 1'b1) ? trunc_ln42_11_fu_156_p1 : 15'd0);

assign trunc_ln42_10_fu_152_p1 = data_1_val[14:0];

assign trunc_ln42_11_fu_156_p1 = data_0_val[14:0];

assign trunc_ln42_1_fu_116_p1 = data_10_val[14:0];

assign trunc_ln42_2_fu_120_p1 = data_9_val[14:0];

assign trunc_ln42_3_fu_124_p1 = data_8_val[14:0];

assign trunc_ln42_4_fu_128_p1 = data_7_val[14:0];

assign trunc_ln42_5_fu_132_p1 = data_6_val[14:0];

assign trunc_ln42_6_fu_136_p1 = data_5_val[14:0];

assign trunc_ln42_7_fu_140_p1 = data_4_val[14:0];

assign trunc_ln42_8_fu_144_p1 = data_3_val[14:0];

assign trunc_ln42_9_fu_148_p1 = data_2_val[14:0];

assign trunc_ln42_fu_112_p1 = data_11_val[14:0];

assign zext_ln45_10_fu_354_p1 = datareg_10_fu_346_p3;

assign zext_ln45_11_fu_372_p1 = datareg_11_fu_364_p3;

assign zext_ln45_1_fu_192_p1 = datareg_1_fu_184_p3;

assign zext_ln45_2_fu_210_p1 = datareg_2_fu_202_p3;

assign zext_ln45_3_fu_228_p1 = datareg_3_fu_220_p3;

assign zext_ln45_4_fu_246_p1 = datareg_4_fu_238_p3;

assign zext_ln45_5_fu_264_p1 = datareg_5_fu_256_p3;

assign zext_ln45_6_fu_282_p1 = datareg_6_fu_274_p3;

assign zext_ln45_7_fu_300_p1 = datareg_7_fu_292_p3;

assign zext_ln45_8_fu_318_p1 = datareg_8_fu_310_p3;

assign zext_ln45_9_fu_336_p1 = datareg_9_fu_328_p3;

assign zext_ln45_fu_174_p1 = datareg_fu_166_p3;

assign ap_return_0 = zext_ln45_fu_174_p1;

assign ap_return_1 = zext_ln45_1_fu_192_p1;

assign ap_return_10 = zext_ln45_10_fu_354_p1;

assign ap_return_11 = zext_ln45_11_fu_372_p1;

assign ap_return_2 = zext_ln45_2_fu_210_p1;

assign ap_return_3 = zext_ln45_3_fu_228_p1;

assign ap_return_4 = zext_ln45_4_fu_246_p1;

assign ap_return_5 = zext_ln45_5_fu_264_p1;

assign ap_return_6 = zext_ln45_6_fu_282_p1;

assign ap_return_7 = zext_ln45_7_fu_300_p1;

assign ap_return_8 = zext_ln45_8_fu_318_p1;

assign ap_return_9 = zext_ln45_9_fu_336_p1;

assign icmp_ln45_10_fu_340_p2 = (($signed(data_10_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_11_fu_358_p2 = (($signed(data_11_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_178_p2 = (($signed(data_1_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_196_p2 = (($signed(data_2_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_214_p2 = (($signed(data_3_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_232_p2 = (($signed(data_4_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_250_p2 = (($signed(data_5_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_268_p2 = (($signed(data_6_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_7_fu_286_p2 = (($signed(data_7_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_8_fu_304_p2 = (($signed(data_8_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_9_fu_322_p2 = (($signed(data_9_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_160_p2 = (($signed(data_0_val) > $signed(16'd0)) ? 1'b1 : 1'b0);

endmodule //myproject_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s
