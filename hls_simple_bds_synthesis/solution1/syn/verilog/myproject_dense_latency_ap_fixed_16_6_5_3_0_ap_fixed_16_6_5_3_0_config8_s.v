// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        ap_return_0,
        ap_return_1,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [15:0] add_ln58_fu_381_p2;
reg   [15:0] add_ln58_reg_610;
wire   [15:0] add_ln58_8_fu_387_p2;
reg   [15:0] add_ln58_8_reg_615;
reg  signed [15:0] data_4_val_read_reg_620;
wire    ap_CS_fsm_state2;
wire   [15:0] grp_fu_339_p4;
reg   [15:0] trunc_ln42_8_reg_625;
wire   [15:0] add_ln58_1_fu_467_p2;
reg   [15:0] add_ln58_1_reg_630;
wire   [15:0] add_ln58_9_fu_473_p2;
reg   [15:0] add_ln58_9_reg_635;
wire   [14:0] grp_fu_349_p4;
reg   [14:0] trunc_ln42_7_reg_640;
wire    ap_CS_fsm_state3;
wire   [15:0] grp_fu_319_p4;
reg   [15:0] trunc_ln42_9_reg_645;
wire   [15:0] grp_fu_329_p4;
reg   [15:0] trunc_ln42_10_reg_650;
reg   [15:0] trunc_ln42_11_reg_655;
reg   [12:0] trunc_ln42_12_reg_660;
reg   [15:0] ap_port_reg_data_2_val;
reg   [15:0] ap_port_reg_data_3_val;
reg   [15:0] ap_port_reg_data_4_val;
reg   [15:0] ap_port_reg_data_5_val;
reg   [15:0] ap_port_reg_data_6_val;
reg   [15:0] ap_port_reg_data_7_val;
wire    ap_CS_fsm_state4;
reg  signed [15:0] grp_fu_142_p0;
wire  signed [25:0] sext_ln73_fu_375_p1;
wire  signed [24:0] sext_ln70_3_fu_411_p1;
wire  signed [25:0] sext_ln70_5_fu_483_p1;
wire  signed [25:0] sext_ln70_7_fu_528_p1;
reg   [10:0] grp_fu_142_p1;
reg  signed [15:0] grp_fu_143_p0;
wire  signed [25:0] sext_ln42_fu_359_p1;
wire  signed [24:0] sext_ln70_1_fu_398_p1;
wire  signed [24:0] sext_ln70_4_fu_479_p1;
reg  signed [10:0] grp_fu_143_p1;
reg  signed [15:0] grp_fu_144_p0;
wire  signed [25:0] sext_ln42_4_fu_462_p1;
wire  signed [25:0] sext_ln70_6_fu_489_p1;
reg  signed [11:0] grp_fu_144_p1;
reg  signed [15:0] grp_fu_145_p0;
wire  signed [25:0] sext_ln70_fu_393_p1;
reg  signed [11:0] grp_fu_145_p1;
wire   [25:0] grp_fu_145_p2;
wire   [25:0] grp_fu_142_p2;
wire   [25:0] grp_fu_144_p2;
wire   [24:0] grp_fu_349_p1;
wire   [25:0] grp_fu_143_p2;
wire   [15:0] trunc_ln_fu_365_p4;
wire  signed [15:0] sext_ln70_fu_393_p0;
wire  signed [15:0] sext_ln70_1_fu_398_p0;
wire  signed [15:0] sext_ln70_2_fu_407_p0;
wire  signed [15:0] sext_ln70_3_fu_411_p0;
wire   [24:0] trunc_ln42_4_fu_416_p1;
wire   [14:0] trunc_ln42_4_fu_416_p4;
wire  signed [15:0] shl_ln_fu_430_p1;
wire   [22:0] shl_ln_fu_430_p3;
wire  signed [23:0] sext_ln73_1_fu_438_p1;
wire  signed [23:0] sext_ln70_2_fu_407_p1;
wire   [23:0] add_ln73_fu_442_p2;
wire   [13:0] trunc_ln42_6_fu_448_p4;
wire  signed [15:0] sext_ln42_4_fu_462_p0;
wire  signed [15:0] sext_ln42_1_fu_403_p1;
wire  signed [15:0] sext_ln42_2_fu_426_p1;
wire  signed [15:0] sext_ln42_3_fu_458_p1;
wire  signed [15:0] sext_ln70_6_fu_489_p0;
wire  signed [15:0] shl_ln73_1_fu_494_p1;
wire   [21:0] shl_ln73_1_fu_494_p3;
wire  signed [22:0] sext_ln73_2_fu_502_p1;
wire   [22:0] sub_ln73_fu_506_p2;
wire   [15:0] add_ln58_4_fu_542_p2;
wire   [15:0] add_ln58_5_fu_548_p2;
wire   [15:0] add_ln58_3_fu_538_p2;
wire   [15:0] add_ln58_6_fu_553_p2;
wire   [15:0] add_ln58_2_fu_534_p2;
wire  signed [15:0] sext_ln42_5_fu_522_p1;
wire   [15:0] add_ln58_12_fu_574_p2;
wire  signed [15:0] sext_ln42_6_fu_525_p1;
wire   [15:0] add_ln58_13_fu_580_p2;
wire   [15:0] add_ln58_11_fu_569_p2;
wire   [15:0] add_ln58_14_fu_586_p2;
wire   [15:0] add_ln58_10_fu_565_p2;
wire   [15:0] add_ln58_7_fu_559_p2;
wire   [15:0] add_ln58_15_fu_592_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

myproject_mul_16s_11ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_16s_11ns_26_1_1_U405(
    .din0(grp_fu_142_p0),
    .din1(grp_fu_142_p1),
    .dout(grp_fu_142_p2)
);

myproject_mul_16s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_16s_11s_26_1_1_U406(
    .din0(grp_fu_143_p0),
    .din1(grp_fu_143_p1),
    .dout(grp_fu_143_p2)
);

myproject_mul_16s_12s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_1_1_U407(
    .din0(grp_fu_144_p0),
    .din1(grp_fu_144_p1),
    .dout(grp_fu_144_p2)
);

myproject_mul_16s_12s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_1_1_U408(
    .din0(grp_fu_145_p0),
    .din1(grp_fu_145_p1),
    .dout(grp_fu_145_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln58_1_reg_630 <= add_ln58_1_fu_467_p2;
        add_ln58_9_reg_635 <= add_ln58_9_fu_473_p2;
        data_4_val_read_reg_620 <= ap_port_reg_data_4_val;
        trunc_ln42_8_reg_625 <= {{grp_fu_144_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln58_8_reg_615 <= add_ln58_8_fu_387_p2;
        add_ln58_reg_610 <= add_ln58_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_port_reg_data_2_val <= data_2_val;
        ap_port_reg_data_3_val <= data_3_val;
        ap_port_reg_data_4_val <= data_4_val;
        ap_port_reg_data_5_val <= data_5_val;
        ap_port_reg_data_6_val <= data_6_val;
        ap_port_reg_data_7_val <= data_7_val;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln42_10_reg_650 <= {{grp_fu_142_p2[25:10]}};
        trunc_ln42_11_reg_655 <= {{grp_fu_144_p2[25:10]}};
        trunc_ln42_12_reg_660 <= {{sub_ln73_fu_506_p2[22:10]}};
        trunc_ln42_7_reg_640 <= {{grp_fu_349_p1[24:10]}};
        trunc_ln42_9_reg_645 <= {{grp_fu_145_p2[25:10]}};
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (1'b0 == ap_ce))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_ce)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_142_p0 = sext_ln70_7_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_142_p0 = sext_ln70_5_fu_483_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_142_p0 = sext_ln70_3_fu_411_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_142_p0 = sext_ln73_fu_375_p1;
    end else begin
        grp_fu_142_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_142_p1 = 26'd266;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_142_p1 = 26'd459;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_142_p1 = 25'd139;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_142_p1 = 26'd584;
    end else begin
        grp_fu_142_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_143_p0 = sext_ln70_4_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_143_p0 = sext_ln70_1_fu_398_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_143_p0 = sext_ln42_fu_359_p1;
    end else begin
        grp_fu_143_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_143_p1 = 25'd145;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_143_p1 = 25'd33554297;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_143_p1 = 26'd402;
    end else begin
        grp_fu_143_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_144_p0 = sext_ln70_6_fu_489_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_144_p0 = sext_ln42_4_fu_462_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_144_p0 = sext_ln73_fu_375_p1;
    end else begin
        grp_fu_144_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_144_p1 = 26'd322;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_144_p1 = 26'd67108311;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_144_p1 = 26'd740;
    end else begin
        grp_fu_144_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_145_p0 = sext_ln70_7_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_145_p0 = sext_ln70_5_fu_483_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_145_p0 = sext_ln70_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_145_p0 = sext_ln42_fu_359_p1;
    end else begin
        grp_fu_145_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_145_p1 = 26'd67108476;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_145_p1 = 26'd67108523;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_145_p1 = 26'd278;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_145_p1 = 26'd622;
    end else begin
        grp_fu_145_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_10_fu_565_p2 = (add_ln58_9_reg_635 + add_ln58_8_reg_615);

assign add_ln58_11_fu_569_p2 = ($signed(sext_ln42_5_fu_522_p1) + $signed(trunc_ln42_10_reg_650));

assign add_ln58_12_fu_574_p2 = ($signed(grp_fu_319_p4) + $signed(16'd65533));

assign add_ln58_13_fu_580_p2 = ($signed(add_ln58_12_fu_574_p2) + $signed(sext_ln42_6_fu_525_p1));

assign add_ln58_14_fu_586_p2 = (add_ln58_13_fu_580_p2 + add_ln58_11_fu_569_p2);

assign add_ln58_15_fu_592_p2 = (add_ln58_14_fu_586_p2 + add_ln58_10_fu_565_p2);

assign add_ln58_1_fu_467_p2 = ($signed(sext_ln42_1_fu_403_p1) + $signed(sext_ln42_2_fu_426_p1));

assign add_ln58_2_fu_534_p2 = (add_ln58_1_reg_630 + add_ln58_reg_610);

assign add_ln58_3_fu_538_p2 = (trunc_ln42_8_reg_625 + trunc_ln42_9_reg_645);

assign add_ln58_4_fu_542_p2 = (grp_fu_329_p4 + 16'd2);

assign add_ln58_5_fu_548_p2 = (add_ln58_4_fu_542_p2 + trunc_ln42_11_reg_655);

assign add_ln58_6_fu_553_p2 = (add_ln58_5_fu_548_p2 + add_ln58_3_fu_538_p2);

assign add_ln58_7_fu_559_p2 = (add_ln58_6_fu_553_p2 + add_ln58_2_fu_534_p2);

assign add_ln58_8_fu_387_p2 = (grp_fu_319_p4 + grp_fu_339_p4);

assign add_ln58_9_fu_473_p2 = ($signed(grp_fu_319_p4) + $signed(sext_ln42_3_fu_458_p1));

assign add_ln58_fu_381_p2 = (trunc_ln_fu_365_p4 + grp_fu_329_p4);

assign add_ln73_fu_442_p2 = ($signed(sext_ln73_1_fu_438_p1) + $signed(sext_ln70_2_fu_407_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return_0 = add_ln58_7_fu_559_p2;

assign ap_return_1 = add_ln58_15_fu_592_p2;

assign grp_fu_319_p4 = {{grp_fu_145_p2[25:10]}};

assign grp_fu_329_p4 = {{grp_fu_142_p2[25:10]}};

assign grp_fu_339_p4 = {{grp_fu_144_p2[25:10]}};

assign grp_fu_349_p1 = grp_fu_143_p2;

assign grp_fu_349_p4 = {{grp_fu_349_p1[24:10]}};

assign sext_ln42_1_fu_403_p1 = $signed(grp_fu_349_p4);

assign sext_ln42_2_fu_426_p1 = $signed(trunc_ln42_4_fu_416_p4);

assign sext_ln42_3_fu_458_p1 = $signed(trunc_ln42_6_fu_448_p4);

assign sext_ln42_4_fu_462_p0 = ap_port_reg_data_4_val;

assign sext_ln42_4_fu_462_p1 = sext_ln42_4_fu_462_p0;

assign sext_ln42_5_fu_522_p1 = $signed(trunc_ln42_7_reg_640);

assign sext_ln42_6_fu_525_p1 = $signed(trunc_ln42_12_reg_660);

assign sext_ln42_fu_359_p1 = $signed(data_0_val);

assign sext_ln70_1_fu_398_p0 = ap_port_reg_data_2_val;

assign sext_ln70_1_fu_398_p1 = sext_ln70_1_fu_398_p0;

assign sext_ln70_2_fu_407_p0 = ap_port_reg_data_3_val;

assign sext_ln70_2_fu_407_p1 = sext_ln70_2_fu_407_p0;

assign sext_ln70_3_fu_411_p0 = ap_port_reg_data_3_val;

assign sext_ln70_3_fu_411_p1 = sext_ln70_3_fu_411_p0;

assign sext_ln70_4_fu_479_p1 = data_4_val_read_reg_620;

assign sext_ln70_5_fu_483_p1 = $signed(ap_port_reg_data_5_val);

assign sext_ln70_6_fu_489_p0 = ap_port_reg_data_6_val;

assign sext_ln70_6_fu_489_p1 = sext_ln70_6_fu_489_p0;

assign sext_ln70_7_fu_528_p1 = $signed(ap_port_reg_data_7_val);

assign sext_ln70_fu_393_p0 = ap_port_reg_data_2_val;

assign sext_ln70_fu_393_p1 = sext_ln70_fu_393_p0;

assign sext_ln73_1_fu_438_p1 = $signed(shl_ln_fu_430_p3);

assign sext_ln73_2_fu_502_p1 = $signed(shl_ln73_1_fu_494_p3);

assign sext_ln73_fu_375_p1 = $signed(data_1_val);

assign shl_ln73_1_fu_494_p1 = ap_port_reg_data_6_val;

assign shl_ln73_1_fu_494_p3 = {{shl_ln73_1_fu_494_p1}, {6'd0}};

assign shl_ln_fu_430_p1 = ap_port_reg_data_3_val;

assign shl_ln_fu_430_p3 = {{shl_ln_fu_430_p1}, {7'd0}};

assign sub_ln73_fu_506_p2 = ($signed(23'd0) - $signed(sext_ln73_2_fu_502_p1));

assign trunc_ln42_4_fu_416_p1 = grp_fu_142_p2;

assign trunc_ln42_4_fu_416_p4 = {{trunc_ln42_4_fu_416_p1[24:10]}};

assign trunc_ln42_6_fu_448_p4 = {{add_ln73_fu_442_p2[23:10]}};

assign trunc_ln_fu_365_p4 = {{grp_fu_143_p2[25:10]}};

endmodule //myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config8_s
